(load "util.scm")
(define (s-q l)
  (define (i l result)
    (if(null? l)
      result
      (i (cdr l) (cons result (square (car l))))
    )
  )
  (i l '())
)

(s-q (list 1 2 3))
;(0 1)
;((0 1) 4)
;(((0 1) 4) 9)
