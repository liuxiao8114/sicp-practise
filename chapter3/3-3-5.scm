(define (exchange account1 account2)
  (let ((difference (- (account1 'balance)
                    (account2 'balance'))))
    ((account1 'withdraw) difference)
    ((account2 'deposit) difference)
  )
)

(define (make-account-serializer balance)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount)) balance)
        (error "not enough money")
    )
  )
  (define (deposit amount)
    (set! balance (+ balance amount)))


  (let ((balance-serializer (make-serializer)))
    (define (dispatch m)
      (cond ((eq? m 'withdraw) withdraw)
            ((eq? m 'deposit) deposit)
            ((eq? m 'balance) balance)
            ((eq? m 'serializer) balance-serializer)
            (else (error "Unknown request --MAKE-ACCOUNT" m)))
    )
    dispatch
  )
)

(define (serialized-exchange account1 account2)
  (let ((serializer1 (account1 'serializer))
        (serializer2 (account2 'serializer)))
    ((serializer1 (serializer2 exchange)) account1 account2)
  )
)
